/*******************************************************************************
 * Copyright (c) 2010, Jean-David Gadina <macmade@eosgarden.com>
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id$ */

#import "PreferencesWindowController.h"
#import "PreferencesWindowController+Private.h"
#import "Preferences.h"

@implementation PreferencesWindowController

@synthesize clearTypeMatrix = _clearTypeMatrix;
@synthesize loginCheckBox   = _loginCheckBox;

- ( id )init
{
    if( ( self = [ self initWithWindowNibName: @"PreferencesWindow" owner: self ] ) )
    {}
    
    return self;
}

- ( void )dealloc
{
    [ _clearTypeMatrix  release ];
    [ _loginCheckBox    release ];
    
    [ super dealloc ];
}

- ( void )awakeFromNib
{
    [ super awakeFromNib ];
}

- ( IBAction )save: ( id )sender
{
    ( void )sender;
    
    if( [ _loginCheckBox intValue ] == 1 )
    {
        [ self enableLoginItem ];
    }
    else
    {
        [ self disableLoginItem ];
    }
    
    [ [ Preferences sharedInstance ] setClearingType: ( PreferencesClearingType )( _clearTypeMatrix.selectedRow ) ];
    
    [ self.window close ];
}

- ( IBAction )cancel: ( id )sender
{
    ( void )sender;
    
    [ self.window close ];
}

- ( IBAction )showWindow: ( id )sender
{
    if( [ self isLoginItemEnabled ] == YES )
    {
        [ _loginCheckBox setIntValue: 1 ];
    }
    else
    {
        [ _loginCheckBox setIntValue: 0 ];
    }
    
    [ _clearTypeMatrix selectCellAtRow: [ [ Preferences sharedInstance ] clearingType ] column: 0 ];
    
    [ super showWindow: sender ];
}

@end
